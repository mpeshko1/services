pipeline {
    agent any

    parameters {
        string(name: 'SERVERS', defaultValue: ' ')
        string(name: 'CONNECTORS', defaultValue: ' ')
        string(name: 'KAFKA_CONNECTOR', defaultValue: ' ')
    }

    stages {
        stage('Load Kafka_Broker') {
            steps {
              script {

//Add parameters from main Jenkinsfile
                echo "Selected kafka brokers"
                def kafka_connector_parameters = "${KAFKA_CONNECTOR}".split(",").join(",")
                println "{kafka_connector_parameters - > $kafka_connector_parameters}"
//Read keyfile.txt and add values to mylistkey
                echo "Read key file"
                def mylistkey = []
                def filePath = readFile "templates/kafka/kafka-broker/ansible-role-create-kafka-connector/keyfile.txt"
                def keyfile = filePath.readLines()

                for (key in keyfile) {
                  mylistkey.add(key)
                }
//Add parameters from main Jenkinsfile
                echo "Running kafka-connector deploy"
                def server_arr = "${SERVERS}".split(",")
                def connectors_parameters = "${CONNECTORS}".split(",")
                def mylistvalue = []
//Add user values to mylistvalue
                for (i in connectors_parameters ) {
                  mylistvalue.add(i)
                }

//Create MAP where key=mylistkey valu=mylistvalue
                def values = [mylistkey,mylistvalue].transpose().collectEntries{[it[0],it[1]]} //user enter parameters -> type MAP
                println  "{mylistkey - > $mylistkey}"
                println  "{mylistvalue - > $mylistvalue}"
                println  "{values - > $values}"

//Set default values
                if ("$values.schema_name" == 'null') {
                    values.schema_name = 'schema_name'
                    println  "{default values.schema_name - > $values.schema_name}"
                }

                if ("$values.replication_factor" == 'null') {
                    values.replication_factor = '1'
                    println  "{default values.replication_factor - > $values.replication_factor}"
                }

                if ("$values.partitions" == 'null') {
                    values.partitions = '3'
                    println  "{default values.partitions - > $values.partitions}"
                }

                if ("$values.src_database_hostname" == 'null') {
                    values.src_database_hostname = '172.17.0.1'
                    println  "{default values.src_database_hostname - > $values.src_database_hostname}"
                }

                if ("$values.src_database_port" == 'null') {
                    values.src_database_port = '3306'
                    println  "{default values.src_database_port - > $values.src_database_port}"
                }

                if ("$values.src_database_user" == 'null') {
                    values.src_database_user = 'root'
                    println  "{default values.src_database_user - > $values.src_database_user}"
                }

                if ("$values.src_database_password" == 'null') {
                    values.src_database_password = '12345678qazXSW'
                    println  "{default values.src_database_password - > $values.src_database_password}"
                }

                if ("$values.server_timezone" == 'null') {
                    values.server_timezone = 'America/New_York'
                    println  "{default values.server_timezone - > $values.server_timezone}"
                }

                if ("$values.dst_database_hostname" == 'null') {
                    values.dst_database_hostname = '172.17.0.1'
                    println  "{default values.dst_database_hostname - > $values.dst_database_hostname}"
                }

                if ("$values.dst_database_port" == 'null') {
                    values.dst_database_port = '13306'
                    println  "{default values.dst_database_port - > $values.dst_database_port}"
                }

                if ("$values.dst_connection_user" == 'null') {
                    values.dst_connection_user = 'root'
                    println  "{default values.dst_connection_user - > $values.dst_connection_user}"
                }

                if ("$values.dst_connection_password" == 'null') {
                    values.dst_connection_password = '12345678qazXSW'
                    println  "{default values.dst_connection_password - > $values.dst_connection_password}"
                }

//Send values to Ansible
                  ansiblePlaybook (
                    playbook: 'templates/kafka/kafka-broker/playbook.yml',
                    inventoryContent: "by-kafka1-vm-1-vpn.spnode.net",
                    disableHostKeyChecking: true,
                    extraVars: [
                      schema_name: "$values.schema_name",
                      replication_factor: "$values.replication_factor",
                      partitions: "$values.partitions",
                      src_database_hostname: "$values.src_database_hostname",
                      src_database_port: "$values.src_database_port",
                      src_database_user: "$values.src_database_user",
                      src_database_password: "$values.src_database_password",
                      server_timezone: "$values.server_timezone",
                      dst_database_hostname: "$values.dst_database_hostname",
                      dst_database_port: "$values.dst_database_port",
                      dst_connection_user: "$values.dst_connection_user",
                      dst_connection_password: "$values.dst_connection_password"
                    ]
                )
              }
            }
        }
    }
}
