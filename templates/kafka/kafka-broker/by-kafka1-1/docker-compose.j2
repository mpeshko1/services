version: '3.7'
services:
  "{{ container_name }}":
    container_name: "{{ container_name }}"
    image: "confluentinc/cp-kafka:7.1.0"
    hostname: "{{ kafka_dns_name }}"
    ports:
      - "{{ ip_internal }}":9092:9092 #Connect internal (SASL/PLAIN)
      - "{{ ip_external }}":29092:29092 #Connect external

    environment:
      KAFKA_BROKER_ID: "{{ broker_id }}"
      KAFKA_HEAP_OPTS: "-Xmx1000M -Xms1000M"
#####
##Coneect config
#####
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'true'
      KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: 'org.apache.zookeeper.ClientCnxnSocketNetty'
      KAFKA_ZOOKEEPER_CONNECT: "{{ kafka_zookeeper_connect }}"
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/"{{ kafka_zookeeper_ssl_keystore_location }}"
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: "{{ kafka_zookeeper_ssl_keystore_password }}"
      KAFKA_ZOOKEEPER_SSL_KEY_PASSWORD: "{{ kafka_zookeeper_ssl_key_password }}"
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: "{{ kafka_zookeeper_ssl_truststore_location }}"
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: "{{ kafka_zookeeper_ssl_truststore_password }}"

      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_SSL:SASL_SSL, SSL:SSL
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://"{{ kafka_dns_name }}":9092,SSL://"{{ kafka_dns_name }}":29092
      KAFKA_LISTENERS: SASL_SSL://"{{ kafka_dns_name }}":9092,SSL://"{{ kafka_dns_name }}":29092
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_SSL
#####
##SASL_SSL/PLAIN Configs
#####
      KAFKA_SUPER_USERS: "User:kafkabroker;User:connect"
      ZOOKEEPER_SASL_ENABLED: "true"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/opt/sasl/kafka_server_jaas.conf"
#####
##ACL Configs
#####
      KAFKA_ZOOKEEPER_SET_ACL: "true"
      KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.authorizer.AclAuthorizer"
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
#####
##SSL Configs
#####
      KAFKA_SSL_KEYSTORE_FILENAME: "{{ kafka_dns_name }}"-keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: ssl.creds
      KAFKA_SSL_KEY_CREDENTIALS: ssl.creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: ssl.creds

      KAFKA_SECURITY_PROTOCOL: SASL_SSL
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_SSL_SECRETS_DIR: /etc/kafka/secrets/
      KAFKA_SSL_CLIENT_AUTH: 'required'
#####
##Merick configs
#####
      JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=9201 -Djava.rmi.server.hostname={{ kafka_dns_name }}"
#####
##Monitoring Prometheus (takes a lot of cpu)
#####
      EXTRA_ARGS: "-javaagent:/opt/prometheus/jmx_prometheus_javaagent.jar=9201:/opt/prometheus/kafka_broker.yml"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#####
##Cluster configs
#####
      KAFKA_AUTO_LEADER_REBALACE_ENABLE: "true"     #Enables auto leader balancing.
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3     #Default replication factors for automatically created topics (old 3)
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3     #The replication factor for the offsets topic (set higher to ensure availability). Internal topic creation will fail until the cluster size meets this replication factor requirement. Critical cfg files (old param 3)

      KAFKA_MIN_INSYNC_REPLICAS: 1      #Ecifies the minimum number of replicas that must acknowledge a write for the write to be considered successful (old 1)
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2      #Overridden min.insync.replicas config for the transaction topic. Critical cfg files (old param 2)
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3     #The replication factor for the transaction topic. Critical cfg files (old param 3)

    volumes:
      - ./"{{ container_name }}"/data/:/var/lib/kafka/data/
      - ./"{{ container_name }}"/monitoring/:/opt/prometheus/
      - ./"{{ container_name }}"/secrets/:/etc/kafka/secrets/
      - ./"{{ container_name }}"/sasl/:/opt/sasl/

    restart: always

    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "1"

    networks:
      - kafka

networks:
  kafka:
    name: kafka
    driver: bridge
