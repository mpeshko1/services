version: '3.7'
services:
  {{container_name}}:
    container_name: {{container_name}}
    image: "confluentinc/cp-kafka:7.1.1"
    hostname: "{{kafka_dns_name}}"
    ports:
      - {{ip_internal}}:{{port_internal}}:{{port_internal}} #Connect internal (SASL/PLAIN)
      - {{ip_external}}:{{port_external}}:{{port_external}} #Connect external
      - {{ip_monitoring}}:{{port_monitoring}}:{{port_monitoring}} # Monitoring Section JMX

    environment:
      KAFKA_BROKER_ID: "{{broker_id}}"
      KAFKA_HEAP_OPTS: "-Xmx{{kafka_heap_opts}}G -Xms{{kafka_heap_opts}}G"
#####
##Coneect config
#####
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'true'
      KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: 'org.apache.zookeeper.ClientCnxnSocketNetty'
      KAFKA_ZOOKEEPER_CONNECT: "{{kafka_zookeeper_connect}}"
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: "{{kafka_zookeeper_ssl_keystore_location}}"
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: "{{kafka_zookeeper_ssl_keystore_password}}"
      KAFKA_ZOOKEEPER_SSL_KEY_PASSWORD: "{{kafka_zookeeper_ssl_key_password}}"
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: "{{kafka_zookeeper_ssl_truststore_location}}"
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: "{{kafka_zookeeper_ssl_truststore_password}}"

      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_SSL:SASL_SSL, SSL:SSL
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://{{kafka_dns_name}}:{{port_internal}},SSL://{{kafka_dns_name}}:{{port_external}}
      KAFKA_LISTENERS: SASL_SSL://{{kafka_dns_name}}:{{port_internal}},SSL://{{kafka_dns_name}}:{{port_external}}
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_SSL
#####
##Config parameters
#####
      KAFKA_REPLICA_FETCH_MAX_BYTES: "{{kafka_replica_fetch_max_bytes}}"   #Размер сообщения, задаваемый на брокере Kafka, должен быть согласован с на-стройкой.
      KAFKA_MESSAGE_MAX_BYTES: "{{kafka_message_max_bytes}}"   #Ограничивать максимальный размер генерируемых сообщений. Производитель, который попытается отправить сообщение большего размера, получит от брокера извещение об ошибке, а сообщение принято не будет.
      KAFKA_LOG_RETENTION_HOURS: "{{kafka_log_retention_hours}}"   #Продолжительность хранения сообщений. 1 неделя.
      KAFKA_CONTROLLER_SOCKET_TIMEOUT_MS: "{{kafka_controller_socket_timeout_ms}}"
      KAFKA_CONNECTION_SETUP_TIMEOUT_MAX_MS: "{{kafka_connection_setup_teimeout_max_ms}}"
      KAFKA_REQUEST_TIMEOUT_MS: "{{kafka_request_timeout_ms}}"
#####
##SASL_SSL/PLAIN Configs
#####
      KAFKA_SUPER_USERS: "User:kafkabroker;User:connect"
      ZOOKEEPER_SASL_ENABLED: "true"
      KAFKA_SASL_ENABLED_MECHANISMS: "PLAIN"
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: "PLAIN"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/opt/sasl/kafka_server_jaas.conf"
#####
##ACL Configs
#####
      KAFKA_ZOOKEEPER_SET_ACL: "true"
      KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.authorizer.AclAuthorizer"
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
#####
##SSL Configs
#####
      KAFKA_SSL_KEYSTORE_FILENAME: "{{kafka_ssl_keystore_filename}}"
      KAFKA_SSL_KEYSTORE_CREDENTIALS: "{{kafka_ssl_pass_file}}"
      KAFKA_SSL_KEY_CREDENTIALS: "{{kafka_ssl_pass_file}}"
      KAFKA_SSL_TRUSTSTORE_FILENAME: "{{kafka_ssl_truststore_filename}}"
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: "{{kafka_ssl_pass_file}}"

      KAFKA_SECURITY_PROTOCOL: "SASL_SSL"
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_SSL_SECRETS_DIR: "{{kafka_ssl_secrets_dir}}"
      KAFKA_SSL_CLIENT_AUTH: "required"
#####
##Merick configs
#####
      JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port={{port_monitoring}} -Djava.rmi.server.hostname={{kafka_dns_name}}"
#####
##Monitoring Prometheus (takes a lot of cpu)
#####
      EXTRA_ARGS: "-javaagent:/opt/prometheus/jmx_prometheus_javaagent.jar={{port_monitoring}}:/opt/prometheus/kafka_broker.yml"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#####
##Cluster configs
#####
      KAFKA_AUTO_LEADER_REBALACE_ENABLE: "{{kafka_auto_leader_rebalance_enable}}"     #Enables auto leader balancing.
      KAFKA_DEFAULT_REPLICATION_FACTOR: {{kafka_default_replication_factor}}     #Default replication factors for automatically created topics (old 3)
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: {{kafka_offsets_topic_replication_factor}}     #The replication factor for the offsets topic (set higher to ensure availability). Internal topic creation will fail until the cluster size meets this replication factor requirement. Critical cfg files (old param 3)

      KAFKA_MIN_INSYNC_REPLICAS: {{kafka_min_insync_replicas}}      #Ecifies the minimum number of replicas that must acknowledge a write for the write to be considered successful (old 1)
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: {{kafka_transaction_state_log_min_isr}}      #Overridden min.insync.replicas config for the transaction topic. Critical cfg files (old param 2)
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: {{kafka_transaction_state_log_replication_factor}}     #The replication factor for the transaction topic. Critical cfg files (old param 3)

    volumes:
      - ./{{container_name}}/data/:/var/lib/kafka/data/
      - ./{{container_name}}/monitoring/:/opt/prometheus/
      - ./{{container_name}}/secrets/:{{kafka_ssl_secrets_dir}}
      - ./{{container_name}}/sasl/:/opt/sasl/

    restart: always

    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "1"

    networks:
      - kafka

networks:
  kafka:
    name: kafka
    driver: bridge
